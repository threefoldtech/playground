import{d as O,u as W,r as u,a as Y,b as s,o as I,c as G,w as o,g as N,e as V,f as a,h as S,m as w,i as g,j as k,p as r,q as E,s as M,y as Q,z as J,_ as X,A as Z,F as ee}from"./index-b7afd9dd.js";import{_ as T,P as $,d as ae,r as B}from"./root_fs-caa8e3a5.js";import{g as F,_ as le}from"./tf_deployment_list.vue_vue_type_script_setup_true_lang-1240b60d.js";import"./list_table.vue_vue_type_script_setup_true_lang-dd240133.js";const te=M("a",{target:"_blank",href:"https://manual.grid.tf/weblets/weblets_umbrel.html",class:"app-link"}," Quick start documentation ",-1),oe={name:"TfUmbrel",components:{SelectSolutionFlavor:F,SelectFarm:T}},se=O({...oe,setup(R){const n=W(),_=u(!1),y=Y(),m=u("UM"+N(9)),c=u("admin"),i=u(N(12)),d=u(!1),l=u(),p=u();async function z(){n.value.setStatus("deploy");const h=$.Umbrel.toLowerCase();try{const e=await Q(y.profile,h);await n.value.validateBalance(e);const v=await ae(e,{name:m.value,machines:[{name:m.value,cpu:l.value.cpu,memory:l.value.memory,disks:[{size:10,mountPoint:"/var/lib/docker"},{size:l.value.disk,mountPoint:"/umbrelDisk"}],flist:"https://hub.grid.tf/tf-official-apps/umbrel-latest.flist",entryPoint:"/sbin/zinit init",farmId:p.value.farmID,farmName:p.value.name,country:p.value.country,planetary:!0,publicIpv4:d.value,envs:[{key:"SSH_KEY",value:y.profile.ssh},{key:"USERNAME",value:c.value},{key:"PASSWORD",value:i.value},{key:"UMBREL_DISK",value:"/umbrelDisk"}],rootFilesystemSize:B(l.value.cpu,l.value.memory)}]});n.value.reloadDeploymentsList(),n.value.setStatus("success","Successfully deployed an Umbrel instance."),n.value.openDialog(v,{SSH_KEY:"Public SSH Key",USERNAME:"Username",PASSWORD:"Password",UMBREL_DISK:"Umbrel Disk"})}catch(e){n.value.setStatus("failed",J(e,"Failed to deploy an Umbrel instance."))}}return(h,e)=>{const v=s("v-text-field"),U=s("input-validator"),j=s("password-input-wrapper"),q=s("v-switch"),A=s("form-validator"),C=s("v-btn"),K=s("weblet-layout");return I(),G(K,{ref_key:"layout",ref:n},{title:o(()=>[V("Deploy an Umbrel Instance ")]),subtitle:o(()=>[V(" Umbrel is an OS for running a personal server in your home. Self-host open source apps like Nextcloud, Bitcoin node, and more. "),te]),"footer-actions":o(()=>[a(C,{color:"primary",variant:"tonal",onClick:z,disabled:!_.value},{default:o(()=>[V(" Deploy ")]),_:1},8,["disabled"])]),default:o(()=>[a(A,{modelValue:_.value,"onUpdate:modelValue":e[6]||(e[6]=b=>_.value=b)},{default:o(()=>{var b,P,L,D,x;return[a(U,{value:m.value,rules:[S("Name is required."),w("Name minLength is 2 chars.",2),g("Name maxLength is 15 chars.",15)]},{default:o(({props:t})=>[a(v,k({label:"Name",modelValue:m.value,"onUpdate:modelValue":e[0]||(e[0]=f=>m.value=f)},t),null,16,["modelValue"])]),_:1},8,["value","rules"]),a(U,{value:c.value,rules:[S("Username is required."),w("Username minLength is 2 chars.",2),g("Username maxLength is 15 chars.",15)]},{default:o(({props:t})=>[a(v,k({label:"Username",modelValue:c.value,"onUpdate:modelValue":e[1]||(e[1]=f=>c.value=f)},t),null,16,["modelValue"])]),_:1},8,["value","rules"]),a(j,null,{default:o(({props:t})=>[a(U,{value:i.value,rules:[S("Password is required."),w("Password minLength is 6 chars.",6),g("Password maxLength is 15 chars.",15)]},{default:o(({props:f})=>[a(v,k({label:"Password",modelValue:i.value,"onUpdate:modelValue":e[2]||(e[2]=H=>i.value=H)},{...t,...f}),null,16,["modelValue"])]),_:2},1032,["value","rules"])]),_:1}),a(q,{color:"primary",inset:"",label:"Public IPv4",modelValue:d.value,"onUpdate:modelValue":e[3]||(e[3]=t=>d.value=t)},null,8,["modelValue"]),a(F,{modelValue:r(l),"onUpdate:modelValue":e[4]||(e[4]=t=>E(l)?l.value=t:null)},null,8,["modelValue"]),a(T,{filters:{cpu:(b=r(l))==null?void 0:b.cpu,memory:(P=r(l))==null?void 0:P.memory,ssd:(((L=r(l))==null?void 0:L.disk)??0)+10+r(B)(((D=r(l))==null?void 0:D.cpu)??0,((x=r(l))==null?void 0:x.memory)??0),publicIp:d.value},modelValue:r(p),"onUpdate:modelValue":e[5]||(e[5]=t=>E(p)?p.value=t:null)},null,8,["filters","modelValue"])]}),_:1},8,["modelValue"])]),_:1},512)}}}),ne={name:"UmbrelView",components:{TfUmbrel:se,TfDeploymentList:le},setup(){return{name:$.Umbrel}}},re={class:"mt-4"};function ue(R,n,_,y,m,c){const i=s("TfUmbrel"),d=s("TfDeploymentList");return I(),Z(ee,null,[a(i),M("div",re,[a(d,{"project-name":y.name},null,8,["project-name"])])],64)}const ce=X(ne,[["render",ue]]);export{ce as default};
