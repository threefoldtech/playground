import{d as L,u as U,r as v,a as D,b as i,o as N,c as B,w as t,g as b,e as y,f as l,m as P,h as I,i as $,j as V,k as q,n as j,_ as z,l as F,F as T}from"./index-df6f743d.js";import{_ as g,P as w,d as E,a as x}from"./tf_deployment_list.vue_vue_type_script_setup_true_lang-1803a4f6.js";import"./list_table.vue_vue_type_script_setup_true_lang-046c7938.js";const G=V("a",{class:"app-link",href:"https://manual.grid.tf/weblets/weblets_nodepilot.html",target:"_blank"}," Quick start documentation ",-1),H={name:"NodePilot",components:{SelectFarmId:g}},K=L({...H,setup(S){const s=U(),c=v(!1),f=D(),u=v("NP"+b(8)),m=v(8),r=v(8192),n=v();async function h(){s.value.setStatus("deploy");const a=w.NodePilot.toLowerCase();try{const e=await q(f.profile,a);await s.value.validateBalance(e);const d=await E(e,{name:u.value,machines:[{name:u.value,cpu:m.value,memory:r.value,flist:"https://hub.grid.tf/tf-official-vms/node-pilot-zdbfs.flist",entryPoint:"/",farmId:n.value.farmID,farmName:n.value.name,country:n.value.country,publicIpv4:!0,publicIpv6:!0,planetary:!1,envs:[{key:"SSH_KEY",value:f.profile.ssh}],rootFilesystemSize:2,disks:[{size:15,mountPoint:"/mnt/"+b(10)},{size:15,mountPoint:"/mnt/"+b(10)}]}]});s.value.reloadDeploymentsList(),s.value.setStatus("success","Successfully deployed a node pilot instance."),s.value.openDialog(d,{SSH_KEY:"Public SSH Key"})}catch(e){s.value.setStatus("failed",j(e,"Failed to deploy a Node Pilot instance."))}}return(a,e)=>{const d=i("v-text-field"),_=i("input-validator"),M=i("form-validator"),k=i("v-btn"),C=i("weblet-layout");return N(),B(C,{ref_key:"layout",ref:s},{title:t(()=>[y("Deploy a Node Pilot")]),subtitle:t(()=>[y(" Deploy a new Node Pilot on the Threefold Grid "),G,y(" . ")]),"footer-actions":t(()=>[l(k,{color:"primary",variant:"tonal",onClick:h,disabled:!c.value},{default:t(()=>[y(" Deploy ")]),_:1},8,["disabled"])]),default:t(()=>[l(M,{modelValue:c.value,"onUpdate:modelValue":e[4]||(e[4]=o=>c.value=o)},{default:t(()=>[l(_,{value:u.value,rules:[a.validators.required("Name is required."),a.validators.minLength("Name minLength is 2 chars.",2),a.validators.maxLength("Name maxLength is 15 chars.",15)]},{default:t(({props:o})=>[l(d,P({label:"Name",modelValue:u.value,"onUpdate:modelValue":e[0]||(e[0]=p=>u.value=p)},o),null,16,["modelValue"])]),_:1},8,["value","rules"]),l(_,{value:m.value,rules:[a.validators.required("CPU is required."),a.validators.isInt("CPU must be a valid integer."),a.validators.min("CPU min is 2 cores.",2),a.validators.max("CPU max is 32 cores.",32)]},{default:t(({props:o})=>[l(d,P({label:"CPU (vCores)",type:"number",modelValue:m.value,"onUpdate:modelValue":e[1]||(e[1]=p=>m.value=p),modelModifiers:{number:!0}},o),null,16,["modelValue"])]),_:1},8,["value","rules"]),l(_,{value:r.value,rules:[a.validators.required("Memory is required."),a.validators.isInt("Memory must be a valid integer."),a.validators.min("Minimum allowed memory is 256 MB.",256),a.validators.max("Maximum allowed memory is 256 GB.",256*1024)]},{default:t(({props:o})=>[l(d,P({label:"Memory (MB)",type:"number",modelValue:r.value,"onUpdate:modelValue":e[2]||(e[2]=p=>r.value=p),modelModifiers:{number:!0}},o),null,16,["modelValue"])]),_:1},8,["value","rules"]),l(g,{filters:{cpu:m.value,memory:r.value,ssd:32,publicIp:!0},modelValue:I(n),"onUpdate:modelValue":e[3]||(e[3]=o=>$(n)?n.value=o:null)},null,8,["filters","modelValue"])]),_:1},8,["modelValue"])]),_:1},512)}}}),Y={name:"NodePilotView",components:{NodePilot:K,TfDeploymentList:x},setup(){return{name:w.NodePilot}}},Q={class:"mt-4"};function R(S,s,c,f,u,m){const r=i("NodePilot"),n=i("TfDeploymentList");return N(),F(T,null,[l(r),V("div",Q,[l(n,{"project-name":f.name},null,8,["project-name"])])],64)}const W=z(Y,[["render",R]]);export{W as default};
