import{d as M,u as P,r as c,a as W,b as l,o as T,c as j,w as a,g as f,e as v,f as t,h,m as g,i as w,j as V,x as A,s as x,y as E,z as F,_ as q,A as z,F as H}from"./index-0b744afb.js";import{b,c as K,d as I,_ as R}from"./tf_deployment_list.vue_vue_type_script_setup_true_lang-9f7c35ec.js";import{_ as S}from"./expandable_layout.vue_vue_type_script_setup_true_lang-8f0d81ce.js";import{P as G}from"./root_fs-3cd83c23.js";import"./list_table.vue_vue_type_script_setup_true_lang-54d7fb0b.js";const O=x("a",{href:"https://manual.grid.tf/weblets/weblets_k8s.html",target:"_blank",class:"app-link"}," Quick start documentation ",-1),Q={name:"TfKubernetes",components:{K8SWorker:b,ExpandableLayout:S}},Y=M({...Q,setup(L){const s=P(),_=c(),p=W(),r=c("K8S"+f(8)),u=c(f(10)),i=c(K("MR"+f(9))),n=c([]);function N(){n.value.push(K())}async function $(){s.value.setStatus("deploy");try{const m=await E(p.profile);await s.value.validateBalance(m);const o=await I(m,{name:r.value,clusterToken:u.value,master:i.value,workers:n.value,sshKey:p.profile.ssh});s.value.reloadDeploymentsList(),s.value.setStatus("success","Successfully deployed a Kubernetes cluster."),s.value.openDialog(o,{SSH_KEY:"Public SSH Key"})}catch(m){s.value.setStatus("failed",F(m,"Failed to deploy kubernetes cluster."))}}return(m,o)=>{const k=l("v-text-field"),y=l("input-validator"),D=l("password-input-wrapper"),C=l("d-tabs"),U=l("v-btn"),B=l("weblet-layout");return T(),j(B,{ref_key:"layout",ref:s},{title:a(()=>[v("Deploy a Kubernetes")]),subtitle:a(()=>[v(" Kubernetes is the standard container orchestration tool. On the TF grid, Kubernetes clusters can be deployed out of the box. We have implemented K3S, a full-blown Kubernetes offering that uses only half of the memory footprint. It is packaged as a single binary and made more lightweight to run workloads in resource-constrained locations (fits e.g. IoT, edge, ARM workloads). "),O]),default:a(()=>[t(C,{tabs:[{title:"Config",value:"config"},{title:"Master",value:"master"},{title:"Workers",value:"workers"}],ref_key:"tabs",ref:_},{config:a(()=>[t(y,{value:r.value,rules:[h("Name is required."),g("Name minimum length is 2 chars.",2),w("Name max length is 15 chars.",15)]},{default:a(({props:e})=>[t(k,V({label:"Name",modelValue:r.value,"onUpdate:modelValue":o[0]||(o[0]=d=>r.value=d)},e),null,16,["modelValue"])]),_:1},8,["value","rules"]),t(y,{value:u.value,rules:[h("Token is required."),g("Token minimum length is 6 chars.",6),w("Token max length is 15 chars.",15),A("Token cannot contain any characters other than alphabets and numbers.")]},{default:a(({props:e})=>[t(D,null,{default:a(()=>[t(k,V({label:"Cluster Token"},e,{modelValue:u.value,"onUpdate:modelValue":o[1]||(o[1]=d=>u.value=d)}),null,16,["modelValue"])]),_:2},1024)]),_:1},8,["value","rules"])]),master:a(()=>[t(b,{modelValue:i.value,"onUpdate:modelValue":o[2]||(o[2]=e=>i.value=e)},null,8,["modelValue"])]),workers:a(()=>[t(S,{modelValue:n.value,"onUpdate:modelValue":o[3]||(o[3]=e=>n.value=e),onAdd:N},{default:a(({index:e})=>[t(b,{modelValue:n.value[e],"onUpdate:modelValue":d=>n.value[e]=d},null,8,["modelValue","onUpdate:modelValue"])]),_:1},8,["modelValue"])]),_:1},512)]),"footer-actions":a(()=>{var e;return[t(U,{variant:"tonal",color:"primary",onClick:$,disabled:(e=_.value)==null?void 0:e.invalid},{default:a(()=>[v(" Deploy ")]),_:1},8,["disabled"])]}),_:1},512)}}}),J={name:"KubernetesView",components:{TfKubernetes:Y,TfDeploymentList:R},setup(){return{name:G.Kubernetes}}},X={class:"mt-4"};function Z(L,s,_,p,r,u){const i=l("TfKubernetes"),n=l("TfDeploymentList");return T(),z(H,null,[t(i),x("div",X,[t(n,{"project-name":p.name},null,8,["project-name"])])],64)}const ne=q(J,[["render",Z]]);export{ne as default};
