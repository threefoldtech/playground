import{d as j,u as x,r,a as F,b as d,o as D,c as M,w as i,g as A,e as k,f as a,m as h,h as p,i as N,j as P,k as O,n as I,_ as W,l as G,F as K}from"./index-df6f743d.js";import{i as U,_ as L,P as $,j as Q,d as z,k as Y,l as J,a as X}from"./tf_deployment_list.vue_vue_type_script_setup_true_lang-1803a4f6.js";import{_ as B}from"./select_gateway_node.vue_vue_type_script_setup_true_lang-ef88227d.js";import"./list_table.vue_vue_type_script_setup_true_lang-046c7938.js";const Z=P("a",{target:"_blank",href:"https://manual.grid.tf/weblets/weblets_subsquid.html",class:"app-link"}," Quick start documentation ",-1),ee={name:"TfSubsquid",components:{SelectSolutionFlavor:U,SelectGatewayNode:B,SelectFarm:L}},ae=j({...ee,setup(T){const t=x(),S=r(!1),c=F(),s=r("SS"+A(9)),v=r(""),f=r(!1),l=r(),_=r(),m=r();async function C(){t.value.setStatus("deploy");const n=$.Subsquid.toLowerCase(),e=Q({deploymentName:s.value,projectName:n,twinId:c.profile.twinId}),V=e+"."+_.value.domain;let u,y;try{u=await O(c.profile,n),await t.value.validateBalance(u),y=await z(u,{name:s.value,machines:[{name:s.value,cpu:l.value.cpu,memory:l.value.memory,disks:[{size:l.value.disk,mountPoint:"/var/lib/docker"}],flist:"https://hub.grid.tf/tf-official-apps/subsquid-latest.flist",entryPoint:"/init.sh",farmId:m.value.farmID,farmName:m.value.name,country:m.value.country,envs:[{key:"SSH_KEY",value:c.profile.ssh},{key:"CHAIN_ENDPOINT",value:v.value},{key:"SUBSQUID_WEBSERVER_HOSTNAME",value:V}]}]})}catch(b){return t.value.setStatus("failed",I(b,"Failed to deploy a Subsquid instance."))}try{t.value.setStatus("deploy","Preparing to deploy gateway..."),await Y(u,{name:e,nodeId:_.value.id,backends:[`http://[${y[0].planetary}]:4444`]}),t.value.reloadDeploymentsList(),t.value.setStatus("success","Successfully deployed a Subsquid instance."),t.value.openDialog(y,{SSH_KEY:"Public SSH Key",SUBSQUID_WEBSERVER_HOSTNAME:"Subsquid Webserver Hostname",CHAIN_ENDPOINT:"Chain Endpoint"})}catch(b){t.value.setStatus("deploy","Rollbacking back due to fail to deploy gateway..."),await J(u,s.value),t.value.setStatus("failed",I(b,"Failed to deploy a Subsquid instance."))}}return(n,e)=>{const V=d("v-text-field"),u=d("input-validator"),y=d("v-switch"),b=d("form-validator"),H=d("v-btn"),R=d("weblet-layout");return D(),M(R,{ref_key:"layout",ref:t},{title:i(()=>[k("Deploy a Subsquid Instance ")]),subtitle:i(()=>[k(" Subsquid indexer is a piece of software that reads all the blocks from a Substrate based blockchain, decodes and stores them for processing in a later stage. "),Z]),"footer-actions":i(()=>[a(H,{color:"primary",variant:"tonal",onClick:C,disabled:!S.value},{default:i(()=>[k(" Deploy ")]),_:1},8,["disabled"])]),default:i(()=>[a(b,{modelValue:S.value,"onUpdate:modelValue":e[6]||(e[6]=g=>S.value=g)},{default:i(()=>{var g,q,E;return[a(u,{value:s.value,rules:[n.validators.required("Name is required."),n.validators.minLength("Name minLength is 2 chars.",2),n.validators.maxLength("Name maxLength is 15 chars.",15)]},{default:i(({props:o})=>[a(V,h({label:"Name",modelValue:s.value,"onUpdate:modelValue":e[0]||(e[0]=w=>s.value=w)},o),null,16,["modelValue"])]),_:1},8,["value","rules"]),a(u,{value:v.value,rules:[n.validators.required("Endpoint is required."),n.validators.isURL("Please provide a valid endpoint.",{protocols:["wss"]})]},{default:i(({props:o})=>[a(V,h({label:"Websockt Endpoint",modelValue:v.value,"onUpdate:modelValue":e[1]||(e[1]=w=>v.value=w)},o),null,16,["modelValue"])]),_:1},8,["value","rules"]),a(y,{color:"primary",inset:"",label:"Public IPv4",modelValue:f.value,"onUpdate:modelValue":e[2]||(e[2]=o=>f.value=o)},null,8,["modelValue"]),a(U,{modelValue:p(l),"onUpdate:modelValue":e[3]||(e[3]=o=>N(l)?l.value=o:null)},null,8,["modelValue"]),a(B,{modelValue:p(_),"onUpdate:modelValue":e[4]||(e[4]=o=>N(_)?_.value=o:null)},null,8,["modelValue"]),a(L,{filters:{cpu:(g=p(l))==null?void 0:g.cpu,memory:(q=p(l))==null?void 0:q.memory,ssd:(E=p(l))==null?void 0:E.disk,publicIp:f.value},modelValue:p(m),"onUpdate:modelValue":e[5]||(e[5]=o=>N(m)?m.value=o:null)},null,8,["filters","modelValue"])]}),_:1},8,["modelValue"])]),_:1},512)}}}),te={name:"SubsquidView",components:{Subsquid:ae,TfDeploymentList:X},setup(){return{name:$.Subsquid}}},le={class:"mt-4"};function oe(T,t,S,c,s,v){const f=d("Subsquid"),l=d("TfDeploymentList");return D(),G(K,null,[a(f),P("div",le,[a(l,{"project-name":c.name},null,8,["project-name"])])],64)}const de=W(te,[["render",oe]]);export{de as default};
