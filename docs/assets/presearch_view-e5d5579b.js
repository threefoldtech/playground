import{d as D,u as L,r as o,a as T,b as s,o as C,c as K,w as l,g as q,e as b,f as t,h as E,m as Y,i as $,j as S,M as F,p as k,q as j,s as M,y as O,z as G,_ as Q}from"./index-0b744afb.js";import{r as J,_ as N,P as W,d as X}from"./root_fs-3cd83c23.js";const Z=M("a",{class:"app-link",href:"https://manual.grid.tf/weblets/weblets_presearch.html",target:"_blank"}," Quick start documentation ",-1),ee={name:"TFPresearch",components:{SelectFarm:N}},ae=D({...ee,setup(B){const r=L(),p=o(),m=T(),n=o("PS"+q(8)),c=o(""),u=o(!1),v=o(!0),_=4,f=8192,U=J(_,f),i=o(),P=o(""),y=o("");async function x(){r.value.setStatus("deploy");const R=W.Presearch.toLowerCase();try{const e=await O(m.profile,R);await r.value.validateBalance(e);const d=await X(e,{name:n.value,machines:[{name:n.value,cpu:_,memory:f,flist:"https://hub.grid.tf/tf-official-apps/presearch-v2.2.flist",entryPoint:"/sbin/zinit init",farmId:i.value.farmID,farmName:i.value.name,planetary:v.value,publicIpv4:u.value,country:i.value.country,envs:[{key:"SSH_KEY",value:m.profile.ssh},{key:"PRESEARCH_REGISTRATION_CODE",value:c.value},{key:"PRESEARCH_BACKUP_PRI_KEY",value:P.value},{key:"PRESEARCH_BACKUP_PUB_KEY",value:y.value}]}]});r.value.reloadDeploymentsList(),r.value.setStatus("success","Successfully deployed a Presearch instance."),r.value.openDialog(d,{SSH_KEY:"Public SSH Key",PRESEARCH_REGISTRATION_CODE:"Presearch Registration Code",PRESEARCH_BACKUP_PRI_KEY:"Presearch Backup Private Key",PRESEARCH_BACKUP_PUB_KEY:"Presearch Backup Public Key"})}catch(e){r.value.setStatus("failed",G(e,"Failed to deploy a Presearch instance."))}}return(R,e)=>{const d=s("v-text-field"),g=s("input-validator"),A=s("password-input-wrapper"),V=s("v-switch"),w=s("v-textarea"),I=s("d-tabs"),H=s("v-btn"),z=s("weblet-layout");return C(),K(z,{ref_key:"layout",ref:r},{title:l(()=>[b("Deploy a Presearch Instance")]),subtitle:l(()=>[b("Presearch is a community-powered, decentralized search engine that provides better results while protecting your privacy and rewarding you when you search. This weblet deploys a Presearch node. Presearch Nodes are used to process user search requests, and node operators earn Presearch PRE tokens for joining and supporting the network. "),Z]),"footer-actions":l(()=>{var a;return[t(H,{color:"primary",variant:"tonal",disabled:(a=p.value)==null?void 0:a.invalid,onClick:x},{default:l(()=>[b(" Deploy ")]),_:1},8,["disabled"])]}),default:l(()=>[t(I,{tabs:[{title:"Base",value:"base"},{title:"Restore",value:"restore"}],ref_key:"tabs",ref:p},{base:l(()=>[t(g,{value:n.value,rules:[E("Name is required."),Y("Name minLength is 2 chars.",2),$("Name maxLength is 15 chars.",15)]},{default:l(({props:a})=>[t(d,S({label:"Name",modelValue:n.value,"onUpdate:modelValue":e[0]||(e[0]=h=>n.value=h)},a),null,16,["modelValue"])]),_:1},8,["value","rules"]),t(g,{value:c.value,rules:[E("Presearch registration code is required."),F("Presearch registration code must be 32 characters long.",32)]},{default:l(({props:a})=>[t(A,null,{default:l(()=>[t(d,S({label:"Presearch Registeration Code"},a,{modelValue:c.value,"onUpdate:modelValue":e[1]||(e[1]=h=>c.value=h)}),null,16,["modelValue"])]),_:2},1024)]),_:1},8,["value","rules"]),t(V,{color:"primary",inset:"",label:"Public IPv4",modelValue:u.value,"onUpdate:modelValue":e[2]||(e[2]=a=>u.value=a)},null,8,["modelValue"]),t(V,{color:"primary",inset:"",label:"Planetary Network",modelValue:v.value,"onUpdate:modelValue":e[3]||(e[3]=a=>v.value=a)},null,8,["modelValue"]),t(N,{filters:{cpu:_,memory:f,ssd:k(U),publicIp:u.value},modelValue:k(i),"onUpdate:modelValue":e[4]||(e[4]=a=>j(i)?i.value=a:null)},null,8,["filters","modelValue"])]),restore:l(()=>[t(w,{label:"Private Presearch Restore Key",modelValue:P.value,"onUpdate:modelValue":e[5]||(e[5]=a=>P.value=a),"no-resize":"",spellcheck:!1},null,8,["modelValue"]),t(w,{label:"Public Presearch Restore Key",modelValue:y.value,"onUpdate:modelValue":e[6]||(e[6]=a=>y.value=a),"no-resize":"",spellcheck:!1},null,8,["modelValue"])]),_:1},512)]),_:1},512)}}}),te={name:"PresearchView",components:{Presearch:ae}};function le(B,r,p,m,n,c){const u=s("Presearch");return C(),K(u)}const oe=Q(te,[["render",le]]);export{oe as default};
